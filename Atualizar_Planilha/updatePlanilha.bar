Sub ProcessarDados()
    Dim ws As Worksheet
    Dim wsContaReal As Worksheet
    Dim wsME2K_PED As Worksheet
    Dim wsContasContabeis As Worksheet
    Dim wsSAP_01 As Worksheet
    Dim wsSAP_02 As Worksheet
    Dim lastRow As Long
    Dim lastRowContaReal As Long
    Dim lastRowME2K_PED As Long
    Dim lastRowContasContabeis As Long
    Dim lastRowSAP_01 As Long
    Dim lastRowSAP_02 As Long
    Dim centroCusto As String
    Dim gerente As String
    Dim valorConcatenado As String
    Dim valorEncontrado As String
    Dim valorIJ As String
    Dim valorIK As String
    Dim valorFC As String
    Dim valorIL As String
    Dim valorIM As String
    Dim valorIN As String
    Dim valorAI As String
    Dim valorIP As String
    Dim valorII As String
    Dim valorIO As String
    Dim valorAT As String
    Dim i As Long
    Dim j As Long
    Dim dictGerentes As Object
    Dim dictContaContabil As Object
    Dim dictContasContabeis As Object
    Dim dictSAP_01 As Object
    Dim dictME2K_PED As Object
    Dim dictCentrosCusto As Object
    
    ' Inicialize os dicionários para armazenar os gerentes, contas contábeis, valores de contas contábeis, valores do ME2K_PED, SAP_01 e SAP_02
    Set dictGerentes = CreateObject("Scripting.Dictionary")
    Set dictContaContabil = CreateObject("Scripting.Dictionary")
    Set dictContasContabeis = CreateObject("Scripting.Dictionary")
    Set dictSAP_01 = CreateObject("Scripting.Dictionary")
    Set dictME2K_PED = CreateObject("Scripting.Dictionary")
    Set dictCentrosCusto = CreateObject("Scripting.Dictionary")
    
    ' Desative a atualização de tela, eventos e cálculos automáticos
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Application.Calculation = xlCalculationManual
    
    ' Defina as planilhas
    Set ws = ThisWorkbook.Sheets("BD_AS400")
    Set wsContaReal = ThisWorkbook.Sheets("Conta Real")
    Set wsME2K_PED = ThisWorkbook.Sheets("ME2K_PED")
    Set wsContasContabeis = ThisWorkbook.Sheets("Contas_Contabeis")
    Set wsSAP_01 = ThisWorkbook.Sheets("SAP_01")
    Set wsSAP_02 = ThisWorkbook.Sheets("SAP_02")
    
    ' Verifique se as planilhas existem
    If ws Is Nothing Or wsContaReal Is Nothing Or wsME2K_PED Is Nothing Or wsContasContabeis Is Nothing Or wsSAP_01 Is Nothing Or wsSAP_02 Is Nothing Then
        GoTo CleanUp
    End If
    
    ' Encontre a última linha nas planilhas
    lastRow = ws.Cells(ws.Rows.Count, "DV").End(xlUp).Row
    lastRowContaReal = wsContaReal.Cells(wsContaReal.Rows.Count, "F").End(xlUp).Row
    lastRowME2K_PED = wsME2K_PED.Cells(wsME2K_PED.Rows.Count, "C").End(xlUp).Row
    lastRowContasContabeis = wsContasContabeis.Cells(wsContasContabeis.Rows.Count, "C").End(xlUp).Row
    lastRowSAP_01 = wsSAP_01.Cells(wsSAP_01.Rows.Count, "C").End(xlUp).Row
    lastRowSAP_02 = wsSAP_02.Cells(wsSAP_02.Rows.Count, "BH").End(xlUp).Row
    
    ' Carregue os gerentes e centros de custo em dicionários para acesso rápido
    For j = 1 To lastRowContaReal
        centroCusto = Trim(wsContaReal.Cells(j, "F").Value)
        gerente = wsContaReal.Cells(j, "J").Value
        If Not dictGerentes.exists(centroCusto) Then
            dictGerentes.Add centroCusto, gerente
        End If
        If Not dictCentrosCusto.exists(gerente) Then
            dictCentrosCusto.Add gerente, centroCusto
        End If
    Next j
    
    ' Carregue as contas contábeis em um dicionário para acesso rápido
    For j = 1 To lastRowME2K_PED
        valorConcatenado = Trim(wsME2K_PED.Cells(j, "O").Value)
        valorEncontrado = wsME2K_PED.Cells(j, "L").Value
        If Not dictContaContabil.exists(valorConcatenado) Then
            dictContaContabil.Add valorConcatenado, valorEncontrado
        End If
    Next j
    
    ' Carregue os valores da planilha Contas_Contabeis em um dicionário para acesso rápido
    For j = 1 To lastRowContasContabeis
        valorIJ = Trim(wsContasContabeis.Cells(j, "C").Value)
        valorIK = wsContasContabeis.Cells(j, "E").Value
        valorIO = wsContasContabeis.Cells(j, "D").Value
        If Not dictContasContabeis.exists(valorIJ) Then
            dictContasContabeis.Add valorIJ, Array(valorIK, valorIO)
        End If
    Next j
    
    ' Carregue os valores da planilha SAP_01 em um dicionário para acesso rápido
    For j = 1 To lastRowSAP_01
        valorFC = Trim(wsSAP_01.Cells(j, "B").Value)
        valorIL = wsSAP_01.Cells(j, "A").Value
        If Not dictSAP_01.exists(valorFC) Then
            dictSAP_01.Add valorFC, valorIL
        End If
    Next j
    
    ' Carregue os valores da planilha ME2K_PED em um dicionário para acesso rápido
    For j = 1 To lastRowME2K_PED
        valorAI = Trim(wsME2K_PED.Cells(j, "C").Value)
        valorIP = wsME2K_PED.Cells(j, "N").Value
        If Not dictME2K_PED.exists(valorAI) Then
            dictME2K_PED.Add valorAI, valorIP
        End If
    Next j
    
    ' Concatenar valores das colunas M e N e colocar na coluna BH na planilha SAP_02
    For j = 2 To lastRowSAP_02
        If wsSAP_02.Cells(j, "M").Value <> "" Then
            wsSAP_02.Cells(j, "BH").Value = wsSAP_02.Cells(j, "M").Value & wsSAP_02.Cells(j, "N").Value
        End If
    Next j
    
    ' Procure o valor da célula AT2 na coluna B da planilha SAP_01 e traga os valores correspondentes da coluna A
    For j = 2 To lastRowSAP_02
        valorAT = Trim(wsSAP_02.Cells(j, "AT").Value)
        If dictSAP_01.exists(valorAT) Then
            wsSAP_02.Cells(j, "BI").Value = dictSAP_01(valorAT)
        Else
            wsSAP_02.Cells(j, "BI").Value = ""
        End If
    Next j
    
    ' Percorra cada linha na planilha BD_AS400
    For i = 4 To lastRow
        centroCusto = Trim(ws.Cells(i, "DV").Value)
        
        ' Insira o nome do gerente na coluna IH, se existir no dicionário
        If dictGerentes.exists(centroCusto) Then
            ws.Cells(i, "IH").Value = dictGerentes(centroCusto)
        Else
            ws.Cells(i, "IH").Value = "Gerente não encontrado"
        End If
        
        ' Concatene os valores de AI e HU e coloque o resultado na célula II
        If ws.Cells(i, "AI").Value <> "" Then
            ws.Cells(i, "II").Value = ws.Cells(i, "AI").Value & ws.Cells(i, "HU").Value
        End If
        
        ' Verifique e insira o valor na coluna IJ, se existir no dicionário
        valorConcatenado = ws.Cells(i, "II").Value
        If dictContaContabil.exists(valorConcatenado) Then
            ws.Cells(i, "IJ").Value = dictContaContabil(valorConcatenado)
        Else
            ws.Cells(i, "IJ").Value = "Investimento"
        End If
        
        ' Verifique e insira o valor na coluna IK, se existir no dicionário
        valorIJ = ws.Cells(i, "IJ").Value
        If dictContasContabeis.exists(valorIJ) Then
            ws.Cells(i, "IK").Value = dictContasContabeis(valorIJ)(0)
        Else
            ws.Cells(i, "IK").Value = ""
        End If
        
        ' Verifique e insira o valor na coluna IL, se existir no dicionário
        valorFC = ws.Cells(i, "FC").Value
        If dictSAP_01.exists(valorFC) Then
            ws.Cells(i, "IL").Value = dictSAP_01(valorFC)
        Else
            ws.Cells(i, "IL").Value = ""
        End If
        
        ' Verifique e insira o valor na coluna IM conforme a lógica adicional
        valorIL = ws.Cells(i, "IL").Value
        If valorIL = "INFRA" Then
            ws.Cells(i, "IM").Value = "Nasser"
        Else
            ws.Cells(i, "IM").Value = ws.Cells(i, "IH").Value
        End If
        
        ' Verifique e insira o valor na coluna IN conforme a nova funcionalidade
        valorIM = ws.Cells(i, "IM").Value
        If valorIM = "Nasser" Then
            ws.Cells(i, "IN").Value = "20132200"
        ElseIf dictCentrosCusto.exists(valorIM) Then
            ws.Cells(i, "IN").Value = dictCentrosCusto(valorIM)
        Else
            ws.Cells(i, "IN").Value = ""
        End If
        
        ' Verifique e insira o valor na coluna IO conforme a nova funcionalidade
        valorIJ = ws.Cells(i, "IJ").Value
        If dictContasContabeis.exists(valorIJ) Then
            ws.Cells(i, "IO").Value = dictContasContabeis(valorIJ)(1)
        Else
            ws.Cells(i, "IO").Value = "Investimento"
        End If
        
        ' Verifique e insira o valor na coluna IP conforme a nova funcionalidade
        valorAI = ws.Cells(i, "AI").Value
        If dictME2K_PED.exists(valorAI) Then
            ws.Cells(i, "IP").Value = dictME2K_PED(valorAI)
        Else
            ws.Cells(i, "IP").Value = ""
        End If
    Next i

CleanUp:
    ' Reative a atualização de tela, eventos e cálculos automáticos
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    
    ' Exibir mensagem de sucesso para o usuário
    MsgBox "Planilha atualizada com sucesso!", vbInformation
    Exit Sub
    
ErrorHandler:
    MsgBox "Erro ao carregar dados: " & Err.Description, vbCritical
    Resume CleanUp
End Sub
